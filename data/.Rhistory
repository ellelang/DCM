install.packages("blogdown")
blogdown::install_hugo()
install.packages("blogdown")
blogdown::install_hugo()
install.packages("blogdown")
blogdown::update_hugo()
packages <- c("sf","tmap","raster","sp", "tmap", "ggmap","ggthemes","spatstat", "viridisLite")
install.packages(packages)
install.packages("tmap")
install.packages("installr")
library(installr)
updateR()
install.packages("glmnetUtils")
library(glmnetUtils)
install.packages("glmnetUtils")
rm(list = ls())
library(tidyverse)
setwd("C:/Users/langzx/Desktop")
grades <- read.csv(file = "GRADES.csv")
name <- read.csv(file = "stu235.csv")
grades$NETID
rm(list = ls())
library(tidyverse)
setwd("C:/Users/langzx/Desktop")
grades <- read.csv(file = "GRADES.csv")
grades$NETID
name <- read.csv(file = "stu235.csv")
name$UWNetID
all <- left_join(grades, name , by =  c("NETID" = "UWNetID"))
all
write.csv(x = all, file = "grades_beforefinal.csv", row.names = FALSE)
write.csv(x = all,  "grades_beforefinal.csv", row.names = FALSE)
write.csv(x = all,  "grades_beforefinal_Netid.csv", row.names = FALSE)
finalscore <- all$Total_beforefinal
finalscore
#set.seed(123456)
R <- 1000
n <- dim(dataset)[1]
t <- 8
s<- 441
index <- seq(1, n, by=16)
length(index)
n_draws <- 1000
################# FOR WHOLE SAMPLE
#set.seed(123456)
R <- 1000
t <- 8
s<- 441
index <- seq(1, n, by=16)
length(index)
n_draws <- 1000
rexp(rate = 1, n = n_draws)
4.134*rexp(rate = 1, n = n_draws)
rnorm(n=n_draws, mean = 0, sd = 1)
exp(5)
setwd("C:/Users/langzx/Desktop/github/DCM/data")
dataset <- read.csv (file = "wta_factorsall_0429.csv",header = TRUE)
betas <- read.table("betas04222020_orign.txt", sep = "\t", header = TRUE)
varcov <- read.table("varscov04222020_orign.txt", sep = "\t", header = FALSE)
varcov_m <- as.matrix(varcov, nrow = 16, ncol = 16)
rmvnorm(1,mean = betas$Betas, sigma = varcov_m)
library(mvtnorm)
rmvnorm(1,mean = betas$Betas, sigma = varcov_m)
#set.seed(123456)
R <- 1000
n <- dim(dataset)[1]
t <- 8
s<- 441
index <- seq(1, n, by=16)
length(index)
n_draws <- 1000
rnorm(n=n_draws, mean = 0, sd = 1)
dim(dataset)
n <- dim(dataset)[1]
dataset$asc <- rep(1,n )
dataset$lake1000 <- dataset$implakes/1000
colnames(dataset)
dat0 <- select (dataset, Wetland, Payment, Covercrop, NuMgt, asc,
dfl08to18,taxcost,
income_1, INCOMB23, income_4, income_5, income_6,
areaf_2, areaf_3, areaf_4, lake1000)
library(tidyverse)
dat0 <- select (dataset, Wetland, Payment, Covercrop, NuMgt, asc,
dfl08to18,taxcost,
income_1, INCOMB23, income_4, income_5, income_6,
areaf_2, areaf_3, areaf_4, lake1000)
dim(dat0)
#set.seed(123456)
R <- 100
n <- dim(dataset)[1]
t <- 8
s<- 441
index <- seq(1, n, by=16)
length(index)
n_draws <- 100
rnorm(n=n_draws, mean = 0, sd = 1)
##########wld wta
set.seed(4008)
WLD_WTA_ALL <- matrix(NA, nrow = s, ncol = 3)
colnames(WLD_WTA_ALL) <- c("MEAN", "CI_L","CI_U")
for (i in 1:s){
wta_vec <- vector (length = R)
draws <- matrix (NA,nrow = R, ncol = 16)
colnames(draws)<-c('wetland','pay','cc','nm','asc','dfl','costtax',
'incfarm1','incfarm23','incfarm4','incfarm5','incfarm6',
'farmsi2','farmsi3','farmsi4','clake')
for (r1 in 1 : R){
drawbetas<- betas
drawbetas$Betas <- as.vector(rmvnorm(1,mean = betas$Betas, sigma = varcov_m))
draws[r1, ] <- drawbetas$Betas
}
for (r in 1 : R){
newbetas <- draws[r,]
pay_rp <- newbetas["pay"]
wld_rp <- newbetas["wetland"]
## individual-specific parameters
new_beta2<- c(0,0,0,0,newbetas[5:13],0,newbetas[15], 0)
index_i <- index [i]
dat_s <- dat0[i,]
dat_s_m <- as.matrix(x = dat_s, nrow = 1, ncol = 16)
#exponential,scaled: wta_s <- -(wld_rp * rexp(rate = 1, n = n_draws) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
#normal distribution: wta_s <- -(wld_rp + varcov_m[1,1]*rnorm(n=n_draws, mean = 0, sd = 1) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
#lognormal distribution:
wta_s <- -(exp(wld_rp + varcov_m[1,1]*rnorm(n=n_draws, mean = 0, sd = 1)) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
wta_vec[r] <- mean(wta_s,na.rm = TRUE)
}
WLD_WTA_ALL[i,1] <- mean(wta_vec,na.rm = TRUE)
WLD_WTA_ALL[i,2] <- quantile(wta_vec, 0.025,na.rm = TRUE)
WLD_WTA_ALL[i,3] <- quantile(wta_vec, 0.975,na.rm = TRUE)
}
WLD_WTA_ALL
plot(density(WLD_WTA_ALL[,1]))
mean(WLD_WTA_ALL[,1])
##########wld wta
set.seed(4008)
WLD_WTA_ALL <- matrix(NA, nrow = s, ncol = 3)
colnames(WLD_WTA_ALL) <- c("MEAN", "CI_L","CI_U")
for (i in 1:s){
wta_vec <- vector (length = R)
draws <- matrix (NA,nrow = R, ncol = 16)
colnames(draws)<-c('wetland','pay','cc','nm','asc','dfl','costtax',
'incfarm1','incfarm23','incfarm4','incfarm5','incfarm6',
'farmsi2','farmsi3','farmsi4','clake')
for (r1 in 1 : R){
drawbetas<- betas
drawbetas$Betas <- as.vector(rmvnorm(1,mean = betas$Betas, sigma = varcov_m))
draws[r1, ] <- drawbetas$Betas
}
for (r in 1 : R){
newbetas <- draws[r,]
pay_rp <- newbetas["pay"]
wld_rp <- newbetas["wetland"]
## individual-specific parameters
new_beta2<- c(0,0,0,0,newbetas[5:13],0,newbetas[15], 0)
index_i <- index [i]
dat_s <- dat0[i,]
dat_s_m <- as.matrix(x = dat_s, nrow = 1, ncol = 16)
#exponential,scaled: wta_s <- -(wld_rp * rexp(rate = 1, n = n_draws) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
#normal distribution:
wta_s <- -(wld_rp + varcov_m[1,1]*rnorm(n=n_draws, mean = 0, sd = 1) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
#lognormal distribution: wta_s <- -(exp(wld_rp + varcov_m[1,1]*rnorm(n=n_draws, mean = 0, sd = 1)) + as.vector(dat_s_m %*% new_beta2)) / (pay_rp)
wta_vec[r] <- mean(wta_s,na.rm = TRUE)
}
WLD_WTA_ALL[i,1] <- mean(wta_vec,na.rm = TRUE)
WLD_WTA_ALL[i,2] <- quantile(wta_vec, 0.025,na.rm = TRUE)
WLD_WTA_ALL[i,3] <- quantile(wta_vec, 0.975,na.rm = TRUE)
}
WLD_WTA_ALL
mean(WLD_WTA_ALL[,1])
